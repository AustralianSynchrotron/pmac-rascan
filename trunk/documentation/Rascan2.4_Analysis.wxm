/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 15.08.1+git ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: title   start ]
axis 1
   [wxMaxima: title   end   ] */

/* [wxMaxima: comment start ]
In the following, variables are considered positive for the sake of software implemenation. 
Particulary, consider the acceleration and jerk signs are reversed in formulas so that the 
variables always take positive values
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f_v1Out: v1Out = v1Scan-v1Diff;
a1In = -2*(v1Out-v1Scan)/tIn;
f_a1In: subst(f_v1Out,%);
(0 - v1Out) =-a1In*tOut+(a1In-a1Out)*tOut/2;
eq_3:  subst([f_a1In,f_v1Out],%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f_tOut:factor(solve([eq_3],[tOut])[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tMid*v1Scan + tIn*(v1Scan-v1Diff/2) = d1Span;
f_tMid: solve(%,[tMid])[1];
f_tIn: tIn = tIn;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
j1In = -(-a1In-0)/tIn;
f_J1In: subst(f_a1In,%);
f_j1In: solve(%,v1Diff);
j1Out = (-a1Out +a1In)/tOut;
f_j1Out:ratsimp(subst([f_tOut,f_v1Out,f_a1In],%));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(f_j1Out,[v1Diff]);
radcan(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
What actually seems to work is -v1Diff instead of v1Diff... no explanations yet
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f_a1Out: solve(f_tOut,[a1Out]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* d1Out is calculated in RSCN PVT_Component.wxm section 4.6 */
rscn_d1Out:d1Out=(4*tIn*(v1Diff+a1Max*tIn)*(v1Scan-v1Diff)^2)/(3*(2*v1Diff+a1Max*tIn)^2);
subst(v1Scan=v1Out+v1Diff,%);
f_d1Out: subst([a1Max=a1Out],%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(f_d1Out,a1Out);
f_a1Out_min: subst([a1Out=a1Out_min,d1Out=d1OutHDM],%[2]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([v1Diff=0,v1Out =4,d1OutHDM=0.1,tIn=0.0296],%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([v1Diff=0,v1Out =4,d1OutHDM=0.1],f_d1Out);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
pdelta: d2Step/a2Max$
ptau: (sqrt(tIn^2+24*delta)-3*tIn)/8$
f_tEdge: tEdge=4*ptau-2*tOut;
f_tLine: tLine = 2 * tOut + 2 * tIn + tEdge + tMid;
f_tLine_NoEdge : subst([tEdge=0],f_tLine);
f_tOvrHd: tOvrHd = tLine - d1Span/v1Scan;
f_tOvrHd_c :tOvrHd = expand(2*((tIn*v1Diff)/(3*v1Scan)+sqrt(tIn^2+24*delta)/4-(3*tIn)/4));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([f_tEdge],f_tLine);
f_tLine_Edge: expand(subst([f_tMid,f_tIn],subst([f_tOut],%)));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([f_tOut,f_tIn,f_tMid],f_tLine_Edge);
diff(%,v1Diff,1);
d_tLine_Edge:ratsimp(%);
solve(%, [v1Diff]);
f_v1Diff_op_tLine_Edge: radcan(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([f_tOut,f_tIn,f_tMid],f_tLine_Edge);
diff(%,tIn,1);
d_tLine_tIn:radcan(%);
-tIn*v1Scan=num(second(%))-tIn*v1Scan;
%^2;
solve(%, [tIn]);
subst(tIn=tIn_opt_tLine,%[2]);
f_tIn_op_tLine_Edge: factor(radcan(%));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([f_tOut,f_tIn,f_tMid],f_tLine_NoEdge);
diff(%,v1Diff,1);
d_tLine_NoEdge:ratsimp(%);
solve(%, [v1Diff]);
f_v1Diff_op_tLine: radcan(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
d1In limitation refl;ected on v1Diff_max and v1Scan_max
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
d1In=((3*v1Out+2*v1Diff)*tIn)/3;
subst([v1Out=v1Scan-v1Diff],%);
f_d1In: expand(%);
expand(solve(f_d1In,v1Diff));
subst([v1Diff=v1Diff_min],%);
expand(solve(f_d1In,v1Scan));
f_tIn_max: subst([tIn=tIn_max],expand(solve(f_d1In,tIn)));
subst([tIn=tIn_max],d2In_max = (a2Max*tIn_max*tIn_max)/6);
f_d2In_max: factor(subst([f_tIn_max],%));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: hide output   ] */
/* [wxMaxima: input   start ] */
|;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
using d1OutHDM to limit v1Scan


   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f_v1Out : solve(f_d1Out,v1Out);
factor(%);
subst([v1Out=v1Scan_max-v1Diff,d1Out=d1OutHDM],%) + v1Diff;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
diff(f_v1Out,d1Out,1);
solve(%,v1Diff);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: title   start ]
axis 2 calculations
   [wxMaxima: title   end   ] */

/* [wxMaxima: input   start ] */
tIn = sqrt(6) * sqrt(d2In / a2Max);
subst(d2In = d2Step*d2TolRatio,%^2);
solve(%,d2TolRatio);
/* [wxMaxima: input   end   ] */


/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
